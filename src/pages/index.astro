---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

const gettingStartedSteps = [
	{
		text: 'Edit ',
		code: 'config.yaml',
		after: ' to tweak your site title, description, and ports'
	},
	{
		text: 'Build and run with ',
		code: 'docker-compose up --build',
		after: ''
	},
	{
		text: 'Customize your Astro pages in ',
		code: 'src/pages/',
		after: ' as usual'
	}
];

const features = [
	'Adjust environment variables without rebuilding the image',
	'Mount content and config via Docker volumes',
	'Extend services (e.g. add a Redis cache or PostgreSQL) simply by editing YAML'
];
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main>
	<h1>üßë‚ÄçüöÄ Hello, Docker Astronaut!</h1>
	<p>
		Welcome to your Astro blog starter‚Äînow fully containerized with Docker!  
		This site is configured via a <code>config.yaml</code> file, which lives alongside your Docker setup to define build settings, environment variables, and service definitions.
	</p>
	<p>
		Out of the box, your <code>astro.config.mjs</code> and Docker stack will read from <code>config.yaml</code>, making it easy to:
	</p>
	<ul>
		{features.map(feature => <li>{feature}</li>)}
	</ul>
	<p>
		To get started:
	</p>
	<ul>
		{gettingStartedSteps.map(step => (
			<li>
				{step.text}
				<code>{step.code}</code>
				{step.after}
			</li>
		))}
	</ul>
</main>

		<Footer />
	</body>
</html>
